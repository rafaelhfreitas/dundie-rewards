<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="3" time="0.154" timestamp="2023-02-20T23:45:47.225749" hostname="rafael-Inspiron-5548"><testcase classname="tests.test_load" name="test_load_positive_has_2_people" time="0.005"><failure message="AssertionError: assert 3 == 2&#10; +  where 3 = len(['Rafael Freitas, Sales, Salesman, rafael@teste.com', 'Masaharu, Sales, Manager, masaharu@teste.com', 'Viviane, Directory, Manager, viviane@teste.com'])&#10; +    where ['Rafael Freitas, Sales, Salesman, rafael@teste.com', 'Masaharu, Sales, Manager, masaharu@teste.com', 'Viviane, Directory, Manager, viviane@teste.com'] = load('/home/rafael/projects_python/dundie-rewards/tests/assets/people.csv')">request = &lt;FixtureRequest for &lt;Function test_load_positive_has_2_people&gt;&gt;

    @pytest.mark.unit
    @pytest.mark.high
    def test_load_positive_has_2_people(request):
        """Test load function."""
    
&gt;       assert len(load(PEOPLE_FILE)) == 2
E       AssertionError: assert 3 == 2
E        +  where 3 = len(['Rafael Freitas, Sales, Salesman, rafael@teste.com', 'Masaharu, Sales, Manager, masaharu@teste.com', 'Viviane, Directory, Manager, viviane@teste.com'])
E        +    where ['Rafael Freitas, Sales, Salesman, rafael@teste.com', 'Masaharu, Sales, Manager, masaharu@teste.com', 'Viviane, Directory, Manager, viviane@teste.com'] = load('/home/rafael/projects_python/dundie-rewards/tests/assets/people.csv')

/home/rafael/projects_python/dundie-rewards/tests/test_load.py:73: AssertionError</failure></testcase><testcase classname="tests.test_load" name="test_load_positive_first_name_starts_with_r" time="0.003" /><testcase classname="integration.test_load" name="test_load" time="0.084" /></testsuite></testsuites>